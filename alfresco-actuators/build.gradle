import java.nio.file.Paths

plugins {
    id 'java'
    id 'maven-publish'
    id 'eu.xenit.amp' apply false
    id 'eu.xenit.alfresco' apply false
    id "com.github.johnrengelman.shadow" version "7.1.2" apply false
}

// compile against alfresco 23.2
//ext {
//    alfrescoVersion = '23.2.2'
//    servletApiVersion = '5.0.0'
//}

subprojects {
    apply plugin: 'eu.xenit.amp'
    apply plugin: 'eu.xenit.alfresco'
    apply plugin: 'com.github.johnrengelman.shadow'

    targetCompatibility = 17
    sourceCompatibility = 17

    System.out.println("project name: " + project.name)
    String versionsGradlePath = Paths.get(project(":alfresco-actuators").projectDir.path, project.name, "versions.gradle")
    System.out.println("versions.gradle path: " + versionsGradlePath)
    apply from: versionsGradlePath

    description = "Amp to add health check endpoint"

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        withJavadocJar()
        withSourcesJar()
    }

    dependencies {
        alfrescoProvided platform("org.alfresco:acs-packaging:${alfrescoVersion}")
        alfrescoProvided("org.alfresco:alfresco-repository")
        alfrescoProvided("org.alfresco:alfresco-enterprise-repository")
        alfrescoProvided("jakarta.servlet:jakarta.servlet-api:$servletApiVersion")
        alfrescoProvided 'jakarta.annotation:jakarta.annotation-api'
        alfrescoProvided 'com.fasterxml.jackson.core:jackson-annotations'

        implementation platform("org.alfresco:acs-packaging:${alfrescoVersion}")
        implementation "jakarta.validation:jakarta.validation-api:${jakartaValidationApi}"
        implementation "io.swagger.core.v3:swagger-annotations-jakarta:${swaggerAnnotationsJakarta}"
    }

    apply from: "${rootProject.projectDir}/swaggerCodeGen.gradle"

    tasks.named("sourcesJar"){
        dependsOn(tasks.named("generateSwaggerCodeModel"))
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact tasks.amp
            }
        }
    }
}